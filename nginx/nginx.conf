#user  nobody;
#user  www www;
worker_processes  10;

error_log  logs/error.log info;
worker_rlimit_nofile 51200;

events {
    use epoll;
    worker_connections  51200;
}


http {
	include       mime.types;
	default_type  application/octet-stream;

#	charset  utf-8;
      
  	server_names_hash_bucket_size 128;
  	client_header_buffer_size 32k;
  	large_client_header_buffers 4 32k;
  	client_max_body_size 300m;
      
  	sendfile on;
 # 	tcp_nopush     on;

  	keepalive_timeout 60;

  	tcp_nodelay on;

  	client_body_buffer_size  512k;
  	proxy_connect_timeout    600;
  	proxy_read_timeout       600;
  	proxy_send_timeout       600;
 	proxy_buffer_size        16k;
  	proxy_buffers            4 64k;
  	proxy_busy_buffers_size 128k;
  	proxy_temp_file_write_size 128k;

  	gzip on;
  	gzip_min_length  1k;
  	gzip_buffers     4 16k;
  	gzip_http_version 1.1;
  	gzip_comp_level 2;
  	gzip_types       text/plain application/x-javascript text/css application/xml;
  	gzip_vary on;

        underscores_in_headers on;
  	#注：proxy_temp_path和proxy_cache_path指定的路径必须在同一分区
  	#proxy_temp_path   /usr/local/nginx/proxy_temp_dir;
  	#设置Web缓存区名称为cache_one，内存缓存空间大小为200MB，1天没有被访问的内容自动清除，硬盘缓存空间大小为30GB。
  	#proxy_cache_path  /usr/local/nginx/proxy_cache_dir  levels=1:2   keys_zone=cache_one:200m inactive=1d max_size=30g;
     
    #map $http_upgrade $connection_upgrade {
    #    default upgrade;
    #    ''      close;
    #}    
    include upsteam_crawler.conf;
    upstream  live {
        ip_hash;
        server   172.18.109.32:8080  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  future {
        ip_hash;
        server   172.18.109.32:8081  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  security {
        ip_hash;
        server   172.18.109.32:8082  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  media {
        ip_hash;
        server   172.18.109.37:8080  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  review {
        ip_hash;
        server   172.18.109.37:8081  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  people {
        ip_hash;
        server   172.18.109.37:8182  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  report {
        ip_hash;
        server   172.18.109.57:8080  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  admin {
        ip_hash;
        server   172.18.109.57:8081  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  explore {
        ip_hash;
        server   172.18.109.57:8082  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  next-api {
        ip_hash;
        server   172.29.33.31:8083   weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  picrewrite {
        ip_hash;
        server   172.18.109.57:80    weight=1 max_fails=2 fail_timeout=30s;
        server   172.18.109.59:80   weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream  user {
        ip_hash;
        server   172.18.109.70:8080  weight=1 max_fails=2 fail_timeout=30s;
    }
   upstream  users {
        ip_hash;
        server   172.29.34.116:8081  weight=1 max_fails=2 fail_timeout=30s;
   }
   upstream  hotsenze {
         ip_hash;
         server   172.18.109.70:8081  weight=1 max_fails=2 fail_timeout=30s;
   }
   upstream  hotsenze-new {
         ip_hash;
         server   172.18.109.70:8082  weight=1 max_fails=2 fail_timeout=30s;
   }
   upstream  mvn-repos {
         ip_hash;
         server   172.29.34.116:9000  weight=1 max_fails=2 fail_timeout=30s;
   }
   upstream  tv {
         ip_hash;
         server   172.18.109.70:8083  weight=1 max_fails=2 fail_timeout=30s;
   }
   server
   {
    listen       80;
    server_name  137.132.145.75 6estates.com www.6estates.com;
    index index.html index.htm;
    root  /usr/local/nginx/html/6estates;  
    location /
    {
        root   /var/www/html/6estates;
        index  index.html index.htm;
    } 
   
    location /futuresenze/
    {
         #如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。
         #proxy_next_upstream http_502 http_404 http_504 error timeout invalid_header;
         #proxy_cache cache_one;
         #对不同的HTTP状态码设置不同的缓存时间
         #proxy_cache_valid  200 304 12h;
         #以域名、URI、参数组合成Web缓存的Key值，Nginx根据Key值哈希，存储缓存内容到二级缓存目录内
         #proxy_cache_key $host$uri$is_args$args;
         proxy_pass http://future;
         proxy_set_header Host  $host;
         proxy_set_header X-Forwarded-For  $remote_addr;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
         #expires      1d;
    }
    location /next-api-web-bak/
    {
         proxy_set_header        Host $host;
         proxy_set_header        X-Forwarded-For  $remote_addr;
         proxy_pass http://next-api/;
         proxy_http_version 1.1;
         #proxy_set_header Upgrade $http_upgrade;
         #proxy_set_header Connection "Upgrade";
    }
    location /next-api-web/ {
         proxy_pass      http://172.18.109.57:8083/;
         proxy_redirect  off;
         proxy_set_header        Host    $host;
         proxy_set_header        X-Read-IP       $remote_addr;
         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
 
         #proxy_set_header        Host $host;
         #proxy_set_header        X-Forwarded-For  $remote_addr;
         #proxy_pass http://172.18.109.57:8083/next-api-web/;
         #proxy_pass    http://172.18.109.57:8083/next-api-web/;
         #proxy_redirect default ;
    }
    #location /livesenze-new/
    #{
    #     proxy_pass http://livesenze-new;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #}

    location /hotsenze/
    {
         proxy_pass http://hotsenze;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }


    location /report/
    {
         proxy_pass http://report;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }

    location /explore/
    {
         proxy_pass http://explore;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /hotsenze-new/
    {
         proxy_pass http://hotsenze-new;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }

    location /reviewsenze/
    {
         proxy_pass http://review;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /mediasenze/
    {
         proxy_pass http://media;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /securitysenze/
    {
         proxy_pass http://security;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /livesenze/
    {
         #如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。
         #proxy_next_upstream http_502 http_404 http_504 error timeout invalid_header;
         #proxy_cache cache_one;
         #对不同的HTTP状态码设置不同的缓存时间
         #proxy_cache_valid  200 304 12h;
         #以域名、URI、参数组合成Web缓存的Key值，Nginx根据Key值哈希，存储缓存内容到二级缓存目录内
         #proxy_cache_key $host$uri$is_args$args;
         proxy_set_header Host  $host;
         proxy_set_header X-Forwarded-For  $remote_addr;
         proxy_pass http://live;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
         #expires      1d;
    }
    location /users/
    {
         proxy_pass http://user;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /admin/
    {
         proxy_pass http://admin;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";
    }
    location /people/
    {
          proxy_pass http://people;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
     }
    #location /admin-old/
    #{
    #     proxy_pass http://admin-old;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #}
    #用于清除缓存，假设一个URL为http://192.168.8.42/test.txt，通过访问http://192.168.8.42/purge/test.txt就可以清除该URL的缓存。
    #location ~ /purge(/.*)
    #{
     #设置只允许指定的IP或IP段才可以清除URL缓存。
     #allow            127.0.0.1;
     #allow            192.168.0.0/16;
     #deny            all;
     #proxy_cache_purge    cache_one   $host$1$is_args$args;
    #}    
     location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css|html)$ #设定访问静态文件直接读取不经过tomcat  
     {  
            expires      30d;  
     }  
    #扩展名以.php、.jsp、.cgi结尾的动态应用程序不缓存。
    #location ~ .*\.(php|cgi)?$
    #{
    #     proxy_set_header Host  $host;
    #     proxy_set_header X-Forwarded-For  $remote_addr;
    #     proxy_pass http://futuresenze;
    #}

    access_log  on;
  }
    #gzip  on;
    server {
        listen          8088;
        server_name     picrewrite;
        location / {
           #expires 15d;
           #proxy_store on;
           #proxy_store_access user:rw group:rw all:rw;
           #proxy_redirect          off;
           proxy_set_header        Host $host;
           proxy_set_header        X-Forwarded-For  $remote_addr;
           #proxy_set_header        X-Real-IP 172.18.109.57;
           #proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
           #client_max_body_size    10m;
           #client_body_buffer_size 1280k;
           #proxy_connect_timeout   900;
           #proxy_send_timeout      900;
           #proxy_read_timeout      900;
           #proxy_buffer_size       40k;
           #proxy_buffers           40 320k;
           #proxy_busy_buffers_size 640k;
           #proxy_temp_file_write_size 640k;
           proxy_pass  http://picrewrite;
        }
   }
   server {
          listen          6888;
          server_name     mvn-repos;
          location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Forwarded-For  $remote_addr;
            proxy_pass  http://mvn-repos;
         }
    }
    server {           
 	   listen          6886;
           server_name     next-api-web;
           location / {
             proxy_set_header        Host $host;
             proxy_set_header        X-Forwarded-For  $remote_addr;
             proxy_pass  http://172.18.109.57:8083/next-api-web/;
          }
    }
   server {
        listen          80;
        server_name     live.6estates.com;
	location /
    	{
         	proxy_pass http://live;
		proxy_set_header X-Forwarded-For  $remote_addr;
         	proxy_http_version 1.1;
         	proxy_set_header Upgrade $http_upgrade;
         	proxy_set_header Connection "Upgrade";
    	}
   }
   server {
        listen          80;
        server_name     future.6estates.com;
        location /
        {
                proxy_pass http://future;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
        listen          80;
        server_name     security.6estates.com;
        location /
        {
                proxy_pass http://security;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
        listen          80;
        server_name     media.6estates.com;
        location /
        {
                proxy_pass http://media;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
        listen          80;
        server_name     review.6estates.com;
        location /
        {
                proxy_pass http://review;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
        listen          80;
        server_name     report.6estates.com;
        location /
        {
                proxy_pass http://report;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
        listen          80;
        server_name     admin.6estates.com;
        location /
        {
                proxy_pass http://admin;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
        }
   }
   server {
         listen          80;
         server_name     explore.6estates.com;
         location /
         {
                 proxy_pass http://explore;
		 proxy_set_header X-Forwarded-For  $remote_addr;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection "Upgrade";
         }
    } 
   server {
         listen          80;
         server_name     people.6estates.com;
         location /
         {
                 proxy_pass http://people;
		 proxy_set_header X-Forwarded-For  $remote_addr;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection "Upgrade";
         }
    }
    server {
         listen          80;
         server_name     users.6estates.com;
         location /
         {
                proxy_pass http://user;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
         }
     }
     server {
         listen          80;
         server_name     api.6estates.com;
         location /
         {
               proxy_pass http://next-api;
		proxy_set_header X-Forwarded-For  $remote_addr;
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection "Upgrade";
         }
     }
     server {
          listen          80;
          server_name     tv.6estates.com;
          location /
          {
                proxy_pass http://tv;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
          }
      }
     server {
          listen          9001;
          server_name     crawler.6estates.com;
          location /
          {
                proxy_pass http://crawler;
		proxy_set_header X-Forwarded-For  $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
          }
      }
}
